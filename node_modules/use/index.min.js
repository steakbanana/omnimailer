/*!
 * use <https://github.com/jonschlinkert/use>
 *
 * Copyright (c) 2015-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
;"use strict";module.exports=function base(e,b){if(!isObject(e)&&typeof e!=="function"){throw new TypeError("expected an object or function")}var d=isObject(b)?b:{};var f=typeof d.prop==="string"?d.prop:"fns";if(!Array.isArray(e[f])){define(e,f,[])}define(e,"use",a);define(e,"run",function(k){if(!isObject(k)){return}if(!k.use||!k.run){define(k,f,k[f]||[]);define(k,"use",a)}if(!k[f]||k[f].indexOf(base)===-1){k.use(base)}var i=this||e;var j=i[f];var h=j.length;var g=-1;while(++g<h){k.use(j[g])}return k});function a(l,k,i){var n=1;if(typeof l==="string"||Array.isArray(l)){k=c(l,k);n++}else{i=k;k=l}if(typeof k!=="function"){throw new TypeError("expected a function")}var g=this||e;var j=g[f];var h=[].slice.call(arguments,n);h.unshift(g);if(typeof d.hook==="function"){d.hook.apply(g,h)}var m=k.apply(g,h);if(typeof m==="function"&&j.indexOf(m)===-1){j.push(m)}return g}function c(h,g){return function i(){return this.type===h?g.apply(this,arguments):i}}return e};function isObject(a){return a&&typeof a==="object"&&!Array.isArray(a)}function define(b,a,c){Object.defineProperty(b,a,{configurable:true,writable:true,value:c})};